From 8f5e4b37af9b38a4fc47d3ea97569d86304bdbd7 Mon Sep 17 00:00:00 2001
From: Justin <earthbound.iap@gmail.com>
Date: Sun, 5 Feb 2012 15:50:31 -0500
Subject: [PATCH 26/35] CPUIDLE: fixed wrapping timers...


diff --git a/Kernel/drivers/cpuidle/governors/menu.c b/Kernel/drivers/cpuidle/governors/menu.c
index 1b12870..e09078c 100644
--- a/Kernel/drivers/cpuidle/governors/menu.c
+++ b/Kernel/drivers/cpuidle/governors/menu.c
@@ -236,6 +236,7 @@ static int menu_select(struct cpuidle_device *dev)
 	int latency_req = pm_qos_request(PM_QOS_CPU_DMA_LATENCY);
 	int i;
 	int multiplier;
+		struct timespec t;
 
 	if (data->needs_update) {
 		menu_update(dev);
@@ -246,12 +247,13 @@ static int menu_select(struct cpuidle_device *dev)
 	data->exit_us = 0;
 
 	/* Special case when user has set very strict latency requirement */
+		t = ktime_to_timespec(tick_nohz_get_sleep_length());
 	if (unlikely(latency_req == 0))
 		return 0;
 
 	/* determine the expected residency time, round up */
 	data->expected_us =
-	    DIV_ROUND_UP((u32)ktime_to_ns(tick_nohz_get_sleep_length()), 1000);
+	    t.tv_sec * USEC_PER_SEC + t.tv_nsec / NSEC_PER_USEC;
 
 
 	data->bucket = which_bucket(data->expected_us);
-- 
1.7.5.4

